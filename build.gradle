
buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



plugins {

    id "com.moowork.node" version "1.3.1"
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id("com.github.node-gradle.node") version "2.2.0"


}
apply plugin: org.springframework.boot.gradle.plugin.SpringBootPlugin
apply plugin:'java'

group = 'nikitagornovoy'
version = '0.0.1-SNAPSHOT'



task buildFront(type: YarnTask) {
    args = ['build', 'run']
}

yarn_install.dependsOn(yarn_cache_clean)
buildFront.dependsOn(yarn_install)


repositories {
    mavenCentral()
}

node{
    download = true
    version = "12.13.1"
    npmVersion = "6.9.0"
    yarnVersion = "1.17.3"
    nodeModulesDir = project.file("ui")
    workDir = project.file("${project.buildDir}/nodejs")
    npmWorkDir = project.file("${project.buildDir}/npm")
    yarnWorkDir = project.file("${project.buildDir}/yarn")
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE')
    compile('org.postgresql:postgresql')
    compile 'org.jsoup:jsoup:1.11.3'
    compile('org.projectlombok:lombok')
    compile 'io.sentry:sentry-spring:1.7.16'
    annotationProcessor('org.projectlombok:lombok')




    testCompile('org.springframework.boot:spring-boot-starter-test')
}


